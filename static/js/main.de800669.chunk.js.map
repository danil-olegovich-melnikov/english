{"version":3,"sources":["App.js","index.js"],"names":["App","props","update_words","words","words_arr","split","filter","el","state","out_sentences","length","mistakes","Set","data","setState","console","log","show_another_word","sents","sentences","includes","sent","Math","floor","random","sentence","number_of_rest_words","add_mistakes","show_mistakes","className","this","size","dangerouslySetInnerHTML","__html","onClick","map","name","rows","placeholder","value","join","onChange","event","target","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAwIeA,E,kDAjIX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAYVC,aAAe,SAACC,GACZ,IAAMC,EAAYD,EAAME,MAAM,MAAMC,QAAO,SAAAC,GACvC,OAAa,MAANA,GAAqB,KAAPA,KAGzB,EAAKC,MAAMC,cAAcC,OAAS,EAClC,EAAKF,MAAMG,SAAW,IAAIC,IAE1B,IAAMC,EAAO,CAAC,MAAST,EAAW,UAAaA,GAE/C,EAAKU,SAASD,GACdE,QAAQC,IAAIZ,IAxBG,EA+BnBa,kBAAoB,WAChB,IAAIC,EAAQ,EAAKV,MAAMW,UAAUb,QAAO,SAAAC,GACpC,OAAQ,EAAKC,MAAMC,cAAcW,SAASb,MAIzB,IAAjBW,EAAMR,SACNK,QAAQC,IAAIE,EAAMR,QAClBQ,EAAQ,EAAKV,MAAMW,UACnB,EAAKX,MAAMC,cAAcC,OAAS,GAGtC,IAAMW,EAAOH,EAAMI,KAAKC,MAAMD,KAAKE,SAAWN,EAAMR,SACpD,EAAKI,SAAS,CACVW,SAAUJ,EACVZ,cAAc,GAAD,mBAAM,EAAKD,MAAMC,eAAjB,CAAgCY,OA9ClC,EAkDnBK,qBAAuB,WACnB,OAAO,EAAKlB,MAAMW,UAAUT,OAAS,EAAKF,MAAMC,cAAcC,QAnD/C,EAsDnBiB,aAAe,WACXZ,QAAQC,IAAI,EAAKR,MAAMG,UACvB,EAAKG,SAAS,CACVH,SAAU,IAAIC,IAAJ,sBAAY,EAAKJ,MAAMG,UAAvB,CAAiC,EAAKH,MAAMiB,cAE1D,EAAKR,qBAzDL,EAAKT,MAAQ,CACTC,cAAe,GACfN,MAAO,GACPgB,UAAW,GACXM,SAAU,uCACVd,SAAU,IAAIC,IACdgB,eAAe,EACf1B,cAAc,GATH,E,0CA+DnB,WAAU,IAAD,OACL,OACI,sBAAK2B,UAAU,MAAf,UACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,OAAf,UACI,oBAAGA,UAAU,mBAAb,8BACsBC,KAAKJ,0BAE3B,oBAAGG,UAAU,oBAAb,iCACyBC,KAAKtB,MAAMG,SAASoB,QAE7C,qBAAKF,UAAU,UAAUG,wBAAyB,CAACC,OAAQH,KAAKtB,MAAMiB,YACtE,qBACII,UAAU,iBACVK,QAASJ,KAAKH,aAFlB,mBAKA,qBACIE,UAAU,kBACVK,QAASJ,KAAKb,kBAFlB,mBAKA,qBAAKY,UAAU,0BACVK,QAAS,WACL,EAAKpB,SAAS,CAACZ,cAAe,EAAKM,MAAMN,gBAFlD,mBAMA,qBAAK2B,UAAU,0BACVK,QACI,kBAAM,EAAKpB,SACP,CACIc,eAAgB,EAAKpB,MAAMoB,iBAJ5C,2BAaJE,KAAKtB,MAAMoB,eACX,sBAAKC,UAAU,uCAAf,UACI,2CACA,oBAAIA,UAAU,KAAd,SACK,YAAIC,KAAKtB,MAAMG,UAAUwB,KAAI,SAAA5B,GAC1B,OAAO,oBAAayB,wBAAyB,CAACC,OAAQ1B,IAAtCA,WAM5BuB,KAAKtB,MAAMN,cACX,qBAAK2B,UAAU,kBAAf,SACA,0BAAUA,UAAU,MAAMO,KAAK,QAAQC,KAAK,KAAKC,YAAa,cACpDC,MAAOT,KAAKtB,MAAML,MAAMqC,KAAK,MAAQ,KACrCC,SACI,SAAAC,GAAK,OAAI,EAAKxC,aAAawC,EAAMC,OAAOJ,mB,GAzHxDK,IAAMC,WCDxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.de800669.chunk.js","sourcesContent":["import './App.css';\nimport React from 'react';\nimport axios from 'axios';\n\n// import words from \"./words\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            out_sentences: [],\n            words: [],\n            sentences: [],\n            sentence: \"Insert words in area and press right\",\n            mistakes: new Set(),\n            show_mistakes: false,\n            update_words: true,\n        };\n    }\n\n    update_words = (words) => {\n        const words_arr = words.split('\\n').filter(el => {\n            return el != null && el !== '';\n        });\n\n        this.state.out_sentences.length = 0;\n        this.state.mistakes = new Set();\n\n        const data = {\"words\": words_arr, \"sentences\": words_arr}\n\n        this.setState(data)\n        console.log(words_arr)\n        // axios.post(`http://127.0.0.1:8000/api`, data)\n        //     .then(res => {\n        //         this.setState({\"sentences\": res.data.sentences})\n        //     })\n    }\n\n    show_another_word = () => {\n        let sents = this.state.sentences.filter(el => {\n            return !this.state.out_sentences.includes(el)\n        });\n\n\n        if (sents.length === 0) {\n            console.log(sents.length)\n            sents = this.state.sentences\n            this.state.out_sentences.length = 0;\n        }\n\n        const sent = sents[Math.floor(Math.random() * sents.length)];\n        this.setState({\n            sentence: sent,\n            out_sentences: [...this.state.out_sentences, sent],\n        })\n    }\n\n    number_of_rest_words = () => {\n        return this.state.sentences.length - this.state.out_sentences.length\n    }\n\n    add_mistakes = () => {\n        console.log(this.state.mistakes)\n        this.setState({\n            mistakes: new Set([...this.state.mistakes, this.state.sentence])\n        })\n        this.show_another_word()\n    }\n\n\n    render() {\n        return (\n            <div className=\"App\">\n                <div className=\"container\">\n                    <div className=\"menu\">\n                        <p className=\"small float-left\">\n                            Number of words: {this.number_of_rest_words()}\n                        </p>\n                        <p className=\"small float-right\">\n                            Number of mistakes: {this.state.mistakes.size}\n                        </p>\n                        <div className=\"py-4 h5\" dangerouslySetInnerHTML={{__html: this.state.sentence}}/>\n                        <div\n                            className=\"btn btn-danger\"\n                            onClick={this.add_mistakes}>\n                            wrong\n                        </div>\n                        <div\n                            className=\"btn btn-success\"\n                            onClick={this.show_another_word}>\n                            right\n                        </div>\n                        <div className=\"btn btn-block btn-light\"\n                             onClick={() => {\n                                 this.setState({update_words: !this.state.update_words})\n                             }}>\n                            words\n                        </div>\n                        <div className=\"btn btn-light btn-block\"\n                             onClick={\n                                 () => this.setState(\n                                     {\n                                         show_mistakes: !this.state.show_mistakes\n                                     }\n                                 )\n                             }>\n                            mistakes\n                        </div>\n                    </div>\n                </div>\n                {\n                    this.state.show_mistakes &&\n                    <div className=\"bg-white m-4 p-4 text-dark text-left\">\n                        <h5>Mistakes:</h5>\n                        <ul className=\"h6\">\n                            {[...this.state.mistakes].map(el => {\n                                return <li key={el} dangerouslySetInnerHTML={{__html: el}}/>\n                            })}\n                        </ul>\n                    </div>\n                }\n                {\n                    this.state.update_words &&\n                    <div className=\"form-group my-4\">\n                    <textarea className=\"p-2\" name=\"words\" rows=\"10\" placeholder={\"Your words:\"}\n                              value={this.state.words.join(\"\\n\") + \"\\n\"}\n                              onChange={\n                                  event => this.update_words(event.target.value)\n                              }/>\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}